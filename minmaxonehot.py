# -*- coding: utf-8 -*-
"""MinMaxOneHot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PLPtOxTvF_nBBQMR7WVrJU7T0nI2POuv
"""

from google.colab import drive

drive.mount('/content/drive')

import pandas as pd
import numpy as np


file_pathtr ='/content/drive/MyDrive/NSL-KDD dataset/KDDTrain+.txt'
train_data = pd.read_csv(file_pathtr)#, header=None)
file_pathte='/content/drive/MyDrive/NSL-KDD dataset/KDDTest+.txt'
test_data = pd.read_csv(file_pathte)#, header=None)

X_train = train_data.drop('normal', axis=1)
y_train = train_data['normal']
X_test = test_data.drop('neptune', axis=1)
y_test = test_data['neptune']

X = train_data.drop('normal', axis=1)
y = train_data['normal']

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

from sklearn.preprocessing import LabelEncoder
def le(df):
    df = pd.DataFrame(df)  # Convert NumPy array to pandas DataFrame
    for col in df.columns:
        if df[col].dtype == 'object':
            label_encoder = LabelEncoder()
            df[col] = label_encoder.fit_transform(df[col])
    return df.values  # Convert back to NumPy array if necessary

le(X_train)
le(X_test)

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.fit_transform(X_test)


# Save the scaler and encoder to a pickle file 
import pickle
with open("minmaxonehotLabelencoder.pkl", "wb") as handle:
    pickle.dump((scaler, le ), handle)
import joblib
joblib.dump((scaler, le), "minmaxonehotLabelencoder.pkl")